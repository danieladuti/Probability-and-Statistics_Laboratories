#      I. distributii continue remarcabile


density_exponential = function(lambda, n, a) {
  x = seq(0,a,n);
  y = dexp(x,lambda);
  plot(x,y,type = 'l');
}

density_exponential(0.1,0.1,100)





#ex 1.a

density_gamma = function(alpha, lambda, n, a) {
  x = seq(0,a,n);
  y = dgamma(x, alpha, lambda);
  plot(x,y,type = 'l');
}

density_gamma(3,1,0.1,10)



#ex 1.b

density_student = function(r, n, a) {
  x = seq(-a,a,n);
  y = dt(x, r);
  plot(x,y,type = 'l');
}

density_student(100,0.1,10)



#ex 1.c

density_norm = function(niu, sigma, n, a) {
  x = seq(-a,a,n);
  y = dnorm(x, mean=niu,sd=sigma);
  plot(x,y,type = 'l');
}

density_norm(0,1,0.1,10)




#       II. legea numerelor mari

#poisson
LLN_Poisson = function(lambda,n) {
  sum = 0;
  for(i in 1:n) {
    u = rpois(1, lambda);
    sum = sum + u;
  }
  return(sum/n);
}

LLN_Poisson(3,10000)

LLN_Gamma = function(alfa,lambda,n){
  return(mean(rgamma(n,alfa,lambda)))
}

LLN_Gamma(12,3,10000)




#II. 1.

#a.

LLN_exp = function(lambda,n){
  return(mean(rexp(n, lambda)))
}
LLN_exp(3,1000000)

#b.

LLN_binom = function(m,p,n){
  return(mean(rbinom(n, m,p)))
}
LLN_binom(10,0.7,10000)




#II. 2.

LLN_student = function(r,n){
  return(mean(rt(n,r)))
}
#LLN_student(10,0.7,10000)

ex22 = function(){
  for(n in c(1000,100000,1000000,100000000))
    for(r in c(2,3,4,5))
      LLN_student(r,n)
}

ex22()



#   III. teorema limita centrala

#ex clt pt Poisson
CLT_Poisson = function(lambda, n, N, z) {
  expectation = lambda;
  st_dev = lambda;
  upper_bound = z * st_dev/sqrt(n) + expectation;
  sum = 0;
  for(i in 1:N) {
    x_n = mean(rpois(n, lambda));
    if(x_n <= upper_bound) {
      sum = sum + 1;
    }
  }
  return(sum/N);
}
#z = c(0,1,1.5,2);
pnorm(0);
CLT_Poisson(3,30,10000,0);



#III. 1.

CLT_exp = function(lambda, n, N, z) {
  expectation = 1/lambda;
  st_dev = 1/(lambda^2);
  upper_bound = z * st_dev/sqrt(n) + expectation;
  sum = 0;
  for(i in 1:N) {
    x_n = mean(rexp(n, lambda));
    if(x_n <= upper_bound) {
      sum = sum + 1;
    }
  }
  return(sum/N);
}
#z = c(0,1,1.5,2);
pnorm(1);
CLT_exp(3,30,10000,1);


#III. 2.

CLT_gamma = function(alfa,lambda,n,N, z) {
  expectation = alfa/lambda;
  st_dev = alfa/(lambda^2);
  upper_bound = z * st_dev/sqrt(n) + expectation;
  sum = 0;
  for(i in 1:N) {
    x_n = mean(rgamma(n, lambda));
    if(x_n <= upper_bound) {
      sum = sum + 1;
    }
  }
  return(sum/N);
}
#z = c(0,1,1.5,2);
pnorm(1);
CLT_gamma(3,30,50,5000,0);





# IV. aproximarea moivre-laplace

#IV. 1.

binomial_probability = function(n, p, k) {
  expectation = n*p;
  variance = n*p*(1 - p);
  standard_deviation = sqrt(variance);
  q = (k - 0.5 - expectation)/standard_deviation;
  return(pnorm(q));
}

binomial_probability(50,0.3,10);

#IV. 2.

binomial_probability = function(n, p, k) {
  expectation = n*p;
  variance = n*p*(1 - p);
  standard_deviation = sqrt(variance);
  q = (k + 0.5 - expectation)/standard_deviation;
  return(1 - pnorm(q));
}

binomial_probability(50,0.3,10);